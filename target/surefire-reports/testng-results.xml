<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-20T14:18:28 IST" name="Suite" finished-at="2023-12-20T14:18:55 IST" duration-ms="26931">
    <groups>
    </groups>
    <test started-at="2023-12-20T14:18:28 IST" name="Test" finished-at="2023-12-20T14:18:55 IST" duration-ms="26931">
      <class name="testNG_annotationExample.NOP_LoginTest">
        <test-method is-config="true" signature="BeforeSuite1()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:28 IST" name="BeforeSuite1" finished-at="2023-12-20T14:18:28 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite1 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:28 IST" name="setup" finished-at="2023-12-20T14:18:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeClassExample()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="beforeClassExample" finished-at="2023-12-20T14:18:47 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassExample -->
        <test-method is-config="true" signature="beforeMethodExample()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="beforeMethodExample" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodExample -->
        <test-method signature="verifyLoginFeature()[pri:-1, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="verifyLoginFeature" finished-at="2023-12-20T14:18:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFeature -->
        <test-method is-config="true" signature="afterMethodExample()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="afterMethodExample" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodExample -->
        <test-method is-config="true" signature="beforeMethodExample()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="beforeMethodExample" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodExample -->
        <test-method is-config="true" signature="afterMethodExample()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="afterMethodExample" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodExample -->
        <test-method signature="verifyAddCustFeature()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="verifyAddCustFeature" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddCustFeature -->
        <test-method is-config="true" signature="beforeMethodExample()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="beforeMethodExample" finished-at="2023-12-20T14:18:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodExample -->
        <test-method signature="verifyLogoutFeature()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="verifyLogoutFeature" finished-at="2023-12-20T14:18:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFeature -->
        <test-method is-config="true" signature="afterMethodExample()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="afterMethodExample" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodExample -->
        <test-method signature="verifyAppTitleFeature()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="verifyAppTitleFeature" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAppTitleFeature -->
        <test-method is-config="true" signature="beforeMethodExample()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="beforeMethodExample" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodExample -->
        <test-method is-config="true" signature="afterMethodExample()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="afterMethodExample" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodExample -->
        <test-method is-config="true" signature="afterClassExample()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="afterClassExample" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassExample -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:47 IST" name="teardown" finished-at="2023-12-20T14:18:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="AfterSuite1()[pri:0, instance:testNG_annotationExample.NOP_LoginTest@6aaceffd]" started-at="2023-12-20T14:18:55 IST" name="AfterSuite1" finished-at="2023-12-20T14:18:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite1 -->
      </class> <!-- testNG_annotationExample.NOP_LoginTest -->
      <class name="actionExample.RightClick_DoubleClickTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:actionExample.RightClick_DoubleClickTest@c86b9e3]" started-at="2023-12-20T14:18:28 IST" name="setup" finished-at="2023-12-20T14:18:45 IST" duration-ms="17416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyDoubleClick()[pri:0, instance:actionExample.RightClick_DoubleClickTest@c86b9e3]" started-at="2023-12-20T14:18:45 IST" name="verifyDoubleClick" finished-at="2023-12-20T14:18:46 IST" duration-ms="1324" status="FAIL">
          <exception class="org.openqa.selenium.NoAlertPresentException">
            <message>
              <![CDATA[no such alert
  (Session info: chrome=120.0.6099.109)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d6c819d4df2bc48aac33f1c0f10de0ce, getAlertText {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.109, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\Admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54662}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54662/devtoo..., se:cdpVersion: 120.0.6099.109, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d6c819d4df2bc48aac33f1c0f10de0ce]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoAlertPresentException: no such alert
  (Session info: chrome=120.0.6099.109)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d6c819d4df2bc48aac33f1c0f10de0ce, getAlertText {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.109, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\Admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54662}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54662/devtoo..., se:cdpVersion: 120.0.6099.109, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d6c819d4df2bc48aac33f1c0f10de0ce
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:596)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.alert(RemoteWebDriver.java:1168)
at actionExample.RightClick_DoubleClickTest.verifyDoubleClick(RightClick_DoubleClickTest.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoAlertPresentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDoubleClick -->
        <test-method signature="verifyRightClick()[pri:0, instance:actionExample.RightClick_DoubleClickTest@c86b9e3]" started-at="2023-12-20T14:18:47 IST" name="verifyRightClick" finished-at="2023-12-20T14:18:47 IST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRightClick -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:actionExample.RightClick_DoubleClickTest@c86b9e3]" started-at="2023-12-20T14:18:47 IST" name="teardown" finished-at="2023-12-20T14:18:55 IST" duration-ms="7794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- actionExample.RightClick_DoubleClickTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
